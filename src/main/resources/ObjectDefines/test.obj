# We have comments using '#'

# using '$' we can define variables!
$varname = value

# We have named structures defined by using the keyword 'Define'
# followed by the type of structure.
# The structures act like variables, and will collide!
# We also need to give the 'fields' of the structure
# some field are optional, and some are mandatory.
# mandatory fields are marked with capitalized field names,
# while optional field are not

# The types of structures are:

# Enemy - defines an enemy
# Animation - defines an animation
# Structure - defines a Box2d structure
# Stats - defines an enemies stats
# Shape - defines a shape

$RavenAnimation = Define Animation:
    State: MOVING raven.gif         # define animation for some state, the first value is given by the 'AnimationState' enum
                                    # the second is a path to either a gif or an image.
    state: IDLE raven.gif           # multiple states can be defined, note that only one state can be capitalized
    initial: MOVING                 # optional: default value is the capitalized state given

$OrcAnimation = Define Animation:
    State: MOVING orc.gif

$RavenStats = Define Stats:
    HP: 100.0                       # starting HP value
    Speed: 70.0                     # speed
    Damage: 10.0                    # the damage the enemy inflicts
    resistance: 0.0                 # optional: default value is 0.0
    scale: 5.0                      # optional: scale of the enemy, scales both sprite and hitbox, default value is 1.0

$RavenShape = Define Shape:
    Type: Circle                    # The type of the shape, this can be 'Circle, Square or Polygon'
    Radius: 4.0                     # The radius of the circle

$testSquare = Define Shape:
    Type: Square                    # When the type is square, we need the fields Width and Height
    Width: 1.0
    Height: 2.0

$testPolygon = Define Shape:        # Not Implemented!
    Type: Polygon                   # When the type is polygon, the fields 'point x y'
                                    # are the points of the polygon in counter-clockwise order
    point: 0.0 0.0
    point: 1.0 0.0
    point: 1.0 1.0
    point: 0.0 1.0


$RavenStructure = Define Structure:
    Filter: ENEMY PLAYER WEAPON         # space separated list of what the structure collides with,
                                        # legal values given by 'FilterTools.Category' enum
    Category: ENEMY                     # space separated list of what the structure is
                                        # legal values given by 'FilterTools.Category'
    Shape: $RavenShape                  # the shape of the structure
    BodyType: DynamicBody               # Values given by the 'BodyDef.BodyType' enum
    density: 1.0                        # optional: default value is 1.0
    friction: 0                         # optional: default value is 0.0
    isSensor: false                     # optional: default value is false


$RAVEN = Define Actor:              # this defines a new enemy with name 'testEnemy'
    Animation: $RavenAnimation      # this field must be an Animation
    Stats: $RavenStats              # this must be a Stats.
    Structure: $RavenStructure      # this must be a Structure.
    
$ORC = Define Actor:                # this defines a new enemy with name 'testEnemy'
    Animation: $OrcAnimation        # this field must be an Animation
    Stats: $RavenStats              # this must be a Stats.
    Structure: $RavenStructure      # this must be a Structure.